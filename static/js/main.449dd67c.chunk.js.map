{"version":3,"sources":["components/Users/Users.module.css","components/windowChat/windowChat.module.css","components/Header/Header.module.css","components/chatReducer.js","components/Message/messageForm.jsx","components/Users/Users.jsx","components/windowChat/windowChat.jsx","components/Body.js","components/Header/HeaderForm.jsx","components/Header/reducerHeader.js","components/Header/HeaderFormSigin.jsx","components/Header/reducerStateName.js","components/Header/Header.jsx","App.js","reportWebVitals.js","components/reducers/reducers.js","index.js","components/Body.module.css"],"names":["module","exports","ADD_FROM_SERVER","ADD_MESSAGE","SET_MESSAGE","initialState","message","MessageForm1","reduxForm","form","props","onSubmit","handleSubmit","Field","placeholder","className","s","input","name","component","button","Users","this","users","map","user","login","_id","chat","React","Component","connect","state","reducerHeader","WindowChat","$","document","ready","scrollTop","id","messageName","u","Body","axios","get","then","mess","data","i","length","setMessages","text","messageText","post","addMessage","body","people","bind","BodyContainer","MessageReducer","reducerStateName","newText","type","newMessage","HeaderFormRedux","ADD_USERS","SET_USERS","setUsers","usersServ","HeaderFormReduxSigin","NAME","Header","Exit","setState","getUsersThunk","setUsersThunk","addUsers","pass","Name","header","to","link","exact","path","render","submitRegistr","submitSigin","onClick","HeaderContainer","dispatch","isAuth","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","newUsers","formReducer","Store","createStore","applyMiddleware","ThunkMiddleware","ReactDOM","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.449dd67c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat\":\"Users_chat__1X262\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat\":\"windowChat_chat__22Syl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"form\":\"Header_form__1yuui\",\"button\":\"Header_button__3kSo_\",\"link\":\"Header_link__2wI74\"};","\nconst ADD_FROM_SERVER = 'ADD_FROM_SERVER'\nconst ADD_MESSAGE = \"ADD_MESSAGE\"\nconst SET_MESSAGE='SET_MESSAGE'\n\nconst initialState = {\n    message: [\n        // {id: 1, name: 'Ivan', message: 'Hello world' },\n        // {id: 2, name: 'Ivan', message: 'yo' },\n        \n    ]\n    \n}\n\n\n\nexport const MessageReducer = (state = initialState, action )=>{\n    \n    switch (action.type){\n        case ADD_MESSAGE:\n            let text ={\n                id:3,\n                name: action.name,\n                message: action.newText\n            }\n\n\n            return {...state, message: [...state.message, text]}\n        case SET_MESSAGE:{\n\n            return{...state, message: [...state.message, action.newMessage]}\n        }\n\n        case ADD_FROM_SERVER:{\n            return {...state, message: [...state.message]}\n        }\n\n\n        default:\n            return state\n        }\n}\n\nexport const addMessage=(newText, name)=>({type: ADD_MESSAGE, newText, name})\nexport const addFromServer=()=>({type: ADD_FROM_SERVER})\nexport const setMessages = (newMessage)=>({type: SET_MESSAGE, newMessage})\n\n\n","import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport s from '../Body.module.css'\n\nconst MessageForm =(props)=>{\n\n\n    \n    \n\n    return(\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <span>\n                    <Field placeholder={\"Enter your message\"} className={s.input} name={\"messageText\"} component={\"input\"}/>\n                </span>\n                <span>\n                    <button className={s.button}>SEND</button>\n                </span>\n            </div>\n        </form>\n    )\n}\n\nconst MessageForm1 = reduxForm({form: 'message'}) (MessageForm)\n\nexport default MessageForm1","import React from 'react'\nimport { connect } from 'react-redux'\nimport s from './Users.module.css'\n\n\nclass Users extends React.Component{\n\n    \n\n\n    render(){\n        \n    let Users = this.props.users.users.map(user=><div key={user._id}>{user.login}</div>)\n    return(\n        <div >\n            Users:\n                <div className={s.chat}>\n                    {Users}\n                </div>\n        </div>\n    )\n}\n}\n\nconst mapStateToProps =(state)=>(\n    {\n        users: state.reducerHeader\n    }\n)\n\n\nexport default connect (mapStateToProps, {}) (Users)","import React from 'react'\nimport s from './windowChat.module.css'\nimport $ from 'jquery'\n\n\nclass WindowChat extends React.Component{\n    \n   \n\n    render(){\n        \n        $(document).ready(function() {\n            $('div').scrollTop(100000000000000000000);\n        })\n\n    return(\n        <div id='chat'>\n        <div  className={s.chat} >\n            \n            {this.props.messageName.map(u=><div key={u.id}><span>{u.name + ': '}</span><span>{u.message}</span></div>)}\n            \n            \n        </div>\n        </div>\n    )}\n}\n\n\nexport default WindowChat","import React from 'react'\nimport { connect } from 'react-redux'\n\n\nimport s from './Body.module.css'\nimport { addMessage, setMessages } from './chatReducer'\n\nimport MessageForm1 from './Message/messageForm'\n\nimport Users from './Users/Users'\nimport WindowChat from './windowChat/windowChat'\nimport axios from 'axios'\n\n\nclass Body extends React.Component{\n    \n     componentDidMount(){\n        \n            axios.get('https://chatmessages.herokuapp.com/api/messages').then(mess=>{\n            let message = mess.data\n            for(let i=0; i<message.length;i++){\n                \n                this.props.setMessages(message[i])\n            }\n        })\n        \n    }\n\n\n\n\n    message(text){\n        let message = {name: this.props.user , message: text.messageText}\n        axios.post('https://chatmessages.herokuapp.com/api/messages', message)\n        \n        this.props.addMessage(text.messageText, this.props.user)\n        \n        text.messageText = ''\n        \n    }\n    componentDidUpdate(){\n\n    }\n\n    render(){\n        \n    return(\n        \n        <div className={s.body}>\n            <div className={s.chat}>\n                <WindowChat messageName={this.props.message} />\n            </div>\n            <div className={s.people}>\n                <Users />\n            </div>\n            <div className={s.mess}>\n               <MessageForm1 onSubmit={this.message.bind(this)} />\n                \n            </div>\n        </div>\n\n    )}\n}\n\n\n\n\n\nconst mapStateToProps=(state)=>({\n    \n    message: state.MessageReducer.message,\n    user: state.reducerStateName.name\n})\n\n\n\n\nexport const BodyContainer = connect(mapStateToProps, {addMessage, setMessages})(Body)\n\n","import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport s from './Header.module.css'\n\nconst HeaderForm = (props) =>{\n\n    return(\n        <form onSubmit={props.handleSubmit}>\n            <div >\n                <div className={s.form}>\n                    <Field placeholder={'login'} name={'login'} component={'input'} />\n                </div>\n                <div className={s.form}>\n                    <Field placeholder={'password'} name={'pass'} component={'input'} type={'password'}/>\n                </div>\n            </div>\n            <span>\n                <button className={s.button}>Регистрация</button>\n                \n            </span>\n        </form>\n    )\n}\n\nconst HeaderFormRedux = reduxForm({form: 'header'})(HeaderForm)\n\nexport default HeaderFormRedux","import axios from \"axios\"\n\nlet ADD_USERS = 'ADD_USERS'\nlet SET_USERS = 'SET_USERS'\n\nconst initialState = {\n    users:[\n    // {id: 1, login: 'gerg', pass: '123'},{id: 1, login: 'gerg', pass: '123'},{id: 1, login: 'gerg', pass: '123'},{id: 1, login: 'gerg', pass: '123'},{id: 1, login: 'gerg', pass: '123'},{id: 1, login: 'gerg', pass: '123'},{id: 1, login: 'gerg', pass: '123'},{id: 1, login: 'gerg', pass: '123'},{id: 1, login: 'gerg', pass: '123'},{id: 1, login: 'gerg', pass: '123'},{id: 1, login: 'gerg', pass: '123'},{id: 1, login: 'gerg', pass: '123'},{id: 1, login: 'gerg', pass: '123'},{id: 1, login: 'gerg', pass: '123'},{id: 1, login: 'gerg', pass: '123'},{id: 1, login: 'gerg', pass: '123'},{id: 1, login: 'gerg', pass: '123'},{id: 1, login: 'gerg', pass: '123'},{id: 1, login: 'gerg', pass: '123'},{id: 1, login: 'gerg', pass: '123'},{id: 1, login: 'gerg', pass: '123'},{id: 1, login: 'gerg', pass: '123'},{id: 1, login: 'gerg', pass: '123'},{id: 1, login: 'gerg', pass: '123'},{id: 1, login: 'gerg', pass: '123'},{id: 1, login: 'gerg', pass: '123'},{id: 1, login: 'gerg', pass: '123'},{id: 1, login: 'gerg', pass: '123'},{id: 1, login: 'gerg', pass: '123'},{id: 1, login: 'gerg', pass: '123'},\n    \n    ]\n}\n\n\nexport const reducerHeader = (state = initialState, action) => {\n    \n    switch (action.type){\n        case ADD_USERS: {\n\n            let login = state.users.map(login=>login.login)\n            \n            for (let i=0; i<login.length; i++){\n                \n                if(action.login===login[i]){\n                    \n                    return state\n                }\n            }\n\n            if (action.pass.length<6) {\n                return state\n            }\n            \n\n            let newUsers={\n                _id: 3,\n                login: action.login,\n                pass: action.pass,\n                isAuth: false\n                \n            }\n\n            return {...state, users: [...state.users, newUsers]}\n        }\n\n        case SET_USERS:{\n            return {...state, users: [...state.users, action.usersServ]}\n        }\n\n        default:\n            return state\n    }\n}\n\nexport const addUsers = (login , pass) =>({type: ADD_USERS, login, pass })\nexport const setUsers = (usersServ)=> ({type: SET_USERS , usersServ})\n\nexport const getUsersThunk=()=>{\n    return (dispatch)=>{\n        axios.get('https://chatmessages.herokuapp.com/api/users').then(user=>{\n            let users = user.data\n            for(let i=0; i<users.length;i++){\n                \n                dispatch(setUsers(users[i]))\n            }\n            \n        })\n    }\n}\n\nexport const setUsersThunk =(text)=>{\n    return(dispatch)=>{\n        let users = {login: text.login, pass: text.pass, isAuth: false}\n        axios.post('https://chatmessages.herokuapp.com/api/users', users)\n    }\n}\n","import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport s from './Header.module.css'\n\nconst HeaderForm = (props) =>{\n\n    return(\n        <form onSubmit={props.handleSubmit}>\n            <div >\n                <div className={s.form}>\n                    <Field placeholder={'login'} name={'login'} component={'input'} />\n                </div>\n                <div className={s.form}>\n                    <Field placeholder={'password'} name={'pass'} component={'input'} type={'password'} />\n                </div>\n            </div>\n            <span>\n                <button className={s.button}>Вход</button>\n                \n            </span>\n        </form>\n    )\n}\n\nconst HeaderFormReduxSigin = reduxForm({form: 'header'})(HeaderForm)\n\nexport default HeaderFormReduxSigin","\n\nconst NAME = 'NAME'\n\nlet initialState={\n    name: 'Unknow'\n}\n\n\nexport const reducerStateName=(state = initialState, action)=>{\n    switch(action.type){\n        case NAME:{\n            return {...state, name: action.name}\n        }\n        default:\n            return state\n    }\n}\n\nexport const Name=(name)=>({type: NAME, name})\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport s from './Header.module.css'\nimport HeaderFormRedux from './HeaderForm'\nimport {addUsers, setUsers, getUsersThunk, setUsersThunk} from './reducerHeader'\nimport {NavLink, Route} from 'react-router-dom'\nimport HeaderFormReduxSigin from './HeaderFormSigin'\nimport {Name} from './../Header/reducerStateName'\n\n\n\n\n\n\nclass Header extends React.Component{\n\n    state = {\n        login: ''\n    }\n\n    componentDidMount(){\n\n        this.props.getUsersThunk()\n\n        \n    }\n\n    submitRegistr (text) {\n\n        this.props.setUsersThunk(text)\n\n        \n\n        \n        // Локальная регистрация\n        this.props.addUsers(text.login, text.pass)\n\n        text.login=''\n        text.pass=''\n\n    }\n\n    submitSigin (text) {\n        let login = this.props.users.map(user=>user.login)\n        let pass = this.props.users.map(user=>user.pass)\n        for(let i=0;i<login.length;i++){\n            if(text.login===login[i] && text.pass === pass[i]){\n                this.setState({login: text.login})\n                this.props.Name(text.login)\n                \n            }\n        }\n        \n    }\n    Exit =()=>{\n        this.setState({login: ''})\n    }\n\n\n    render(){\n        \n\n        \n    return (\n        <div className={s.header}>\n            <h1>Welcom to chat {this.state.login}</h1>\n            {!this.state.login && \n            <div>\n            <NavLink to={'/ChatMessages/reg'} className={s.link}>Register</NavLink>\n            <span> </span>\n            \n            <NavLink to={'/ChatMessages/sigin'} className={s.link}>Sigin</NavLink>\n            <Route exact path='/ChatMessages/reg' render={()=><HeaderFormRedux onSubmit={this.submitRegistr.bind(this)}/>} />\n            <Route exact path='/ChatMessages/sigin' render={()=><HeaderFormReduxSigin onSubmit={this.submitSigin.bind(this)}/>} />\n            </div>\n    }\n    {this.state.login && \n        <div>\n            <button onClick={this.Exit}>Exit</button>\n        </div>\n    }\n        </div>\n    )}\n}\n\n\n\nconst mapStateToProps = (state) =>({\n    users: state.reducerHeader.users\n})\n\nconst HeaderContainer = connect (mapStateToProps, {addUsers, Name, setUsers, getUsersThunk, setUsersThunk}) (Header)\n\n\nexport default HeaderContainer","import {BodyContainer} from './components/Body'\nimport HeaderContainer from './components/Header/Header';\n\n\n\n\n\nfunction App() {\n  return (\n    <div>\n      <HeaderContainer />\n      <BodyContainer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware, combineReducers, createStore } from \"redux\"\nimport {MessageReducer} from '../chatReducer'\nimport {reducerHeader} from '../Header/reducerHeader'\nimport {reducer as formReducer} from 'redux-form'\nimport {reducerStateName} from '../Header/reducerStateName'\nimport ThunkMiddleware from 'redux-thunk'\n\n\n\nconst reducers = combineReducers({\n    MessageReducer,\n    reducerHeader,\n    reducerStateName,\n    form: formReducer\n    \n})\n\nexport const Store = createStore(reducers, applyMiddleware(ThunkMiddleware))","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {Provider} from 'react-redux'\nimport { Store } from './components/reducers/reducers';\nimport {BrowserRouter} from 'react-router-dom'\n\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <Provider store={Store}>\n        <App />\n      </Provider>\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Body_body__7Uf9z\",\"chat\":\"Body_chat__10QVh\",\"people\":\"Body_people__3g_1N\",\"mess\":\"Body_mess__3ebwQ\",\"input\":\"Body_input__28ubP\",\"button\":\"Body_button__fsVq7\"};"],"sourceRoot":""}