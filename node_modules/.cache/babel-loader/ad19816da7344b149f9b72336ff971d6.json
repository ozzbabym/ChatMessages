{"ast":null,"code":"import _classCallCheck from\"/Users/ivannazarov/Documents/reactApp/ServerAndMessage/message/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/ivannazarov/Documents/reactApp/ServerAndMessage/message/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/ivannazarov/Documents/reactApp/ServerAndMessage/message/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/ivannazarov/Documents/reactApp/ServerAndMessage/message/node_modules/@babel/runtime/helpers/esm/createSuper\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React from'react';import{connect}from'react-redux';import s from'./Body.module.css';import{addMessage,setMessages}from'./chatReducer';import MessageForm1 from'./Message/messageForm';import Users from'./Users/Users';import WindowChat from'./windowChat/windowChat';import axios from'axios';var Body=/*#__PURE__*/function(_React$Component){_inherits(Body,_React$Component);var _super=_createSuper(Body);function Body(){_classCallCheck(this,Body);return _super.apply(this,arguments);}_createClass(Body,[{key:\"componentDidMount\",value:function componentDidMount(){var _this=this;axios.get('https://chatmessages.herokuapp.com/api/messages').then(function(mess){var message=mess.data;for(var i=0;i<message.length;i++){_this.props.setMessages(message[i]);}});}},{key:\"message\",value:function message(text){var message={name:this.props.user,message:text.messageText};axios.post('https://chatmessages.herokuapp.com/api/messages',message);this.props.addMessage(text.messageText,this.props.user);text.messageText='';}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{className:s.body,children:[/*#__PURE__*/_jsx(\"div\",{className:s.chat,children:/*#__PURE__*/_jsx(WindowChat,{messageName:this.props.message})}),/*#__PURE__*/_jsx(\"div\",{className:s.people,children:/*#__PURE__*/_jsx(Users,{})}),/*#__PURE__*/_jsx(\"div\",{className:s.mess,children:/*#__PURE__*/_jsx(MessageForm1,{onSubmit:this.message.bind(this)})})]});}}]);return Body;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{message:state.MessageReducer.message,user:state.reducerStateName.name};};export var BodyContainer=connect(mapStateToProps,{addMessage:addMessage,setMessages:setMessages})(Body);","map":{"version":3,"sources":["/Users/ivannazarov/Documents/reactApp/ServerAndMessage/message/src/components/Body.js"],"names":["React","connect","s","addMessage","setMessages","MessageForm1","Users","WindowChat","axios","Body","get","then","mess","message","data","i","length","props","text","name","user","messageText","post","body","chat","people","bind","Component","mapStateToProps","state","MessageReducer","reducerStateName","BodyContainer"],"mappings":"4oBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CAGA,MAAOC,CAAAA,CAAP,KAAc,mBAAd,CACA,OAASC,UAAT,CAAqBC,WAArB,KAAwC,eAAxC,CAEA,MAAOC,CAAAA,YAAP,KAAyB,uBAAzB,CAEA,MAAOC,CAAAA,KAAP,KAAkB,eAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,GAGMC,CAAAA,I,sQAEiB,gBAEfD,KAAK,CAACE,GAAN,CAAU,iDAAV,EAA6DC,IAA7D,CAAkE,SAAAC,IAAI,CAAE,CACpE,GAAIC,CAAAA,OAAO,CAAGD,IAAI,CAACE,IAAnB,CACA,IAAI,GAAIC,CAAAA,CAAC,CAAC,CAAV,CAAaA,CAAC,CAACF,OAAO,CAACG,MAAvB,CAA8BD,CAAC,EAA/B,CAAkC,CAE9B,KAAI,CAACE,KAAL,CAAWb,WAAX,CAAuBS,OAAO,CAACE,CAAD,CAA9B,EACH,CACJ,CAND,EAQH,C,wCAKOG,I,CAAK,CACT,GAAIL,CAAAA,OAAO,CAAG,CAACM,IAAI,CAAE,KAAKF,KAAL,CAAWG,IAAlB,CAAyBP,OAAO,CAAEK,IAAI,CAACG,WAAvC,CAAd,CACAb,KAAK,CAACc,IAAN,CAAW,iDAAX,CAA8DT,OAA9D,EAEA,KAAKI,KAAL,CAAWd,UAAX,CAAsBe,IAAI,CAACG,WAA3B,CAAwC,KAAKJ,KAAL,CAAWG,IAAnD,EAEAF,IAAI,CAACG,WAAL,CAAmB,EAAnB,CAEH,C,+DACmB,CAEnB,C,uCAEO,CAER,mBAEI,aAAK,SAAS,CAAEnB,CAAC,CAACqB,IAAlB,wBACI,YAAK,SAAS,CAAErB,CAAC,CAACsB,IAAlB,uBACI,KAAC,UAAD,EAAY,WAAW,CAAE,KAAKP,KAAL,CAAWJ,OAApC,EADJ,EADJ,cAII,YAAK,SAAS,CAAEX,CAAC,CAACuB,MAAlB,uBACI,KAAC,KAAD,IADJ,EAJJ,cAOI,YAAK,SAAS,CAAEvB,CAAC,CAACU,IAAlB,uBACG,KAAC,YAAD,EAAc,QAAQ,CAAE,KAAKC,OAAL,CAAaa,IAAb,CAAkB,IAAlB,CAAxB,EADH,EAPJ,GAFJ,CAeE,C,kBA/Ca1B,KAAK,CAAC2B,S,EAsDzB,GAAMC,CAAAA,eAAe,CAAC,QAAhBA,CAAAA,eAAgB,CAACC,KAAD,QAAU,CAE5BhB,OAAO,CAAEgB,KAAK,CAACC,cAAN,CAAqBjB,OAFF,CAG5BO,IAAI,CAAES,KAAK,CAACE,gBAAN,CAAuBZ,IAHD,CAAV,EAAtB,CASA,MAAO,IAAMa,CAAAA,aAAa,CAAG/B,OAAO,CAAC2B,eAAD,CAAkB,CAACzB,UAAU,CAAVA,UAAD,CAAaC,WAAW,CAAXA,WAAb,CAAlB,CAAP,CAAoDK,IAApD,CAAtB","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\n\n\nimport s from './Body.module.css'\nimport { addMessage, setMessages } from './chatReducer'\n\nimport MessageForm1 from './Message/messageForm'\n\nimport Users from './Users/Users'\nimport WindowChat from './windowChat/windowChat'\nimport axios from 'axios'\n\n\nclass Body extends React.Component{\n    \n    componentDidMount(){\n        \n        axios.get('https://chatmessages.herokuapp.com/api/messages').then(mess=>{\n            let message = mess.data\n            for(let i=0; i<message.length;i++){\n                \n                this.props.setMessages(message[i])\n            }\n        })\n        \n    }\n\n\n\n\n    message(text){\n        let message = {name: this.props.user , message: text.messageText}\n        axios.post('https://chatmessages.herokuapp.com/api/messages', message)\n        \n        this.props.addMessage(text.messageText, this.props.user)\n        \n        text.messageText = ''\n        \n    }\n    componentDidUpdate(){\n\n    }\n\n    render(){\n        \n    return(\n        \n        <div className={s.body}>\n            <div className={s.chat}>\n                <WindowChat messageName={this.props.message} />\n            </div>\n            <div className={s.people}>\n                <Users />\n            </div>\n            <div className={s.mess}>\n               <MessageForm1 onSubmit={this.message.bind(this)} />\n                \n            </div>\n        </div>\n\n    )}\n}\n\n\n\n\n\nconst mapStateToProps=(state)=>({\n    \n    message: state.MessageReducer.message,\n    user: state.reducerStateName.name\n})\n\n\n\n\nexport const BodyContainer = connect(mapStateToProps, {addMessage, setMessages})(Body)\n\n"]},"metadata":{},"sourceType":"module"}